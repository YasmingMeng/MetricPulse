# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
    push:
        # 只有master分支发生push事件时，才会触发workflow
        branches: [master]
    pull_request:
        branches: [master]
        
env:
    SERVER_PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }} # 服务器私钥
    SERVER_HOST: ${{ secrets.SERVER_HOST }} # 服务器IP地址
    USER_NAME: ${{ secrets.USER_NAME }} # 服务器用户名
    cache-name: note

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: v14.17.6
      - run: npm ci
      - run: npm test
    #缓存依赖
      - name: Cache nodemodules
        uses: actions/cache@v1
        env:
            cache-name: cache-node-modules
        with:
            # 需要缓存的文件的路径
            path: ./node_modules 
            # 对缓存的文件指定的唯一标识
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./package.json') }} 
            # 用于没有再找目标key的缓存的backup选项
            restore-keys: |
                ${{ runner.os }}-build-${{ env.cache-name }}-
                ${{ runner.os }}-build-
                ${{ runner.os }}-
      # 装依赖
      - name: Install
        run: npm install

      # 打包
      - name: Build
        run: npm run build

      # 上传打包资源
      - name: Deploy
        uses: easingthemes/ssh-deploy@v2.0.7
        env:
            SSH_PRIVATE_KEY: ${{ env.SERVER_PRIVATE_KEY }}
            ARGS: '-avz --delete'
            SOURCE: 'dist/'
            REMOTE_HOST: ${{ env.SERVER_HOST }}
            REMOTE_USER: ${{ env.USER_NAME }}
            TARGET: /home/log-metric # 服务器目标路径

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
